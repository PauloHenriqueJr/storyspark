{
  "tech_stack": [
    "TypeScript",
    "React",
    "Vite",
    "Tailwind CSS",
    "Supabase",
    "React Query",
    "React Router",
    "Radix UI",
    "Playwright",
    "Vitest",
    "ESLint",
    "PostCSS",
    "shadcn/ui",
    "PWA"
  ],
  "features": [
    {
      "name": "Authentication System",
      "description": "User authentication and authorization with role-based access control using Supabase",
      "files": [
        "src/integrations/supabase/client.ts",
        "src/integrations/supabase/types.ts",
        "src/hooks/useRole.tsx",
        "src/components/auth/",
        "src/app/router/admin.tsx"
      ]
    },
    {
      "name": "Composer (AI Content Generator)",
      "description": "Main AI-powered content generation interface with chat functionality and real-time preview",
      "files": [
        "src/pages/Composer.tsx",
        "src/components/composer/",
        "src/services/copyGenerationService.ts",
        "src/hooks/useComposer.ts"
      ]
    },
    {
      "name": "Personas Management",
      "description": "Complete CRUD operations for user personas with templates, analysis and tone detection",
      "files": [
        "src/pages/Personas.tsx",
        "src/components/personas/",
        "src/services/personasService.ts",
        "src/hooks/usePersonas.ts"
      ]
    },
    {
      "name": "Brand Voices System",
      "description": "Brand voice creation and management with tone analysis, interactive tester and versioning",
      "files": [
        "src/pages/BrandVoices.tsx",
        "src/components/brand-voices/",
        "src/services/brandVoicesService.ts",
        "src/hooks/useBrandVoices.ts"
      ]
    },
    {
      "name": "Campaign Management",
      "description": "Campaign creation, management, scheduling and performance tracking system",
      "files": [
        "src/pages/Campaigns.tsx",
        "src/components/campaigns/",
        "src/services/campaignsService.ts",
        "src/hooks/useCampaigns.ts"
      ]
    },
    {
      "name": "Editorial Calendar",
      "description": "Interactive calendar view for content scheduling with drag & drop functionality",
      "files": [
        "src/components/calendar/DraggableCalendar.tsx",
        "src/hooks/useCalendar.tsx",
        "src/services/calendarService.ts"
      ]
    },
    {
      "name": "Analytics Dashboard",
      "description": "Interactive analytics and reporting dashboard with charts, filters and export capabilities",
      "files": [
        "src/pages/Analytics.tsx",
        "src/components/analytics/",
        "src/services/analyticsService.ts",
        "src/hooks/useAnalytics.ts",
        "src/hooks/useDashboardStats.tsx",
        "src/hooks/useRecentActivities.tsx"
      ]
    },
    {
      "name": "Templates Library",
      "description": "Template management system with categories, variables, favorites and performance metrics",
      "files": [
        "src/pages/Templates.tsx",
        "src/components/templates/",
        "src/services/templatesService.ts",
        "src/hooks/useTemplates.ts"
      ]
    },
    {
      "name": "Admin Panel",
      "description": "Administrative interface for user management, plans and content moderation",
      "files": [
        "src/pages/admin/",
        "src/components/admin/",
        "src/hooks/useAdminUsers.tsx",
        "src/hooks/useAdminPlans.tsx",
        "src/hooks/useAdminPlansCache.tsx"
      ]
    },
    {
      "name": "PWA Features",
      "description": "Progressive Web App functionality with offline support, service workers and installation prompts",
      "files": [
        "public/manifest.json",
        "public/sw.js",
        "src/hooks/usePWA.tsx",
        "src/components/pwa/"
      ]
    },
    {
      "name": "Social Media Integrations",
      "description": "OAuth integrations with major social media platforms for content publishing",
      "files": [
        "src/services/socialService.ts",
        "src/components/social/"
      ]
    },
    {
      "name": "Billing System",
      "description": "Subscription and billing management with payment processing and usage tracking",
      "files": [
        "src/pages/Billing.tsx",
        "src/services/billingService.ts",
        "src/hooks/useBilling.ts"
      ]
    },
    {
      "name": "Dynamic Plans System",
      "description": "Dynamic pricing plans management system with admin controls and real-time updates",
      "files": [
        "src/hooks/useAdminPlansCache.tsx",
        "src/pages/admin/AdminPlans.tsx",
        "src/components/pricing/PricingSection.tsx"
      ]
    },
    {
      "name": "Document Upload with AI",
      "description": "Document upload and AI processing system for automatic content extraction",
      "files": [
        "src/services/documentProcessingService.ts",
        "src/components/upload/DocumentUploadModal.tsx",
        "src/components/floating/FloatingCopyButton.tsx"
      ]
    },
    {
      "name": "UI Components Library",
      "description": "Reusable UI components built with Radix UI, Tailwind CSS and shadcn/ui",
      "files": [
        "src/components/ui/",
        "src/components/common/"
      ]
    },
    {
      "name": "State Management",
      "description": "Global state management with React Context, custom hooks and React Query",
      "files": [
        "src/contexts/",
        "src/providers/",
        "src/hooks/",
        "src/contexts/ToastContext.tsx",
        "src/hooks/useNotifications.tsx",
        "src/hooks/useToastNotifications.tsx"
      ]
    },
    {
      "name": "API Services",
      "description": "Service layer for API communication with Supabase and external integrations",
      "files": [
        "src/services/",
        "src/integrations/supabase/"
      ]
    },
    {
      "name": "Routing System",
      "description": "Client-side routing with React Router, protected routes and error boundaries",
      "files": [
        "src/app/router/",
        "src/components/RouteTracker.tsx",
        "src/app/router/RouteErrorBoundary.tsx"
      ]
    },
    {
      "name": "Onboarding System",
      "description": "User onboarding flow with interactive tutorials and setup wizards",
      "files": [
        "src/components/onboarding/",
        "src/pages/public/"
      ]
    },
    {
      "name": "Testing Infrastructure",
      "description": "Comprehensive testing setup with Vitest for unit tests and Playwright for E2E tests",
      "files": [
        "tests/",
        "vitest.config.ts",
        "playwright.config.ts",
        "src/test-setup.tsx"
      ]
    },
    {
      "name": "Theme System",
      "description": "Dark/light theme system with persistence and smooth transitions",
      "files": [
        "src/components/theme/",
        "src/hooks/useTheme.ts"
      ]
    }
  ]
}